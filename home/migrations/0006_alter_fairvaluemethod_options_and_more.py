# Generated by Django 4.1.12 on 2024-01-12 12:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('home', '0005_remove_shareholder_owner_remove_shareholder_share_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='fairvaluemethod',
            options={'verbose_name_plural': '11. Fair Value Method'},
        ),
        migrations.AlterModelOptions(
            name='historicalfairvaluemethod',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical fair value method', 'verbose_name_plural': 'historical 11. Fair Value Method'},
        ),
        migrations.AlterModelOptions(
            name='historicalseedstep',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical seed step', 'verbose_name_plural': 'historical 10. Seed Steps'},
        ),
        migrations.AlterModelOptions(
            name='seedstep',
            options={'ordering': ['-end_term'], 'verbose_name_plural': '10. Seed Steps'},
        ),
        migrations.AlterModelOptions(
            name='split',
            options={'verbose_name_plural': '09. Splits'},
        ),
        migrations.CreateModel(
            name='ShareholderList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('comment', models.TextField(blank=True, max_length=10240)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.company')),
            ],
            options={
                'verbose_name_plural': '07. Shareholder List',
                'db_table': 'shareholder_list',
            },
        ),
        migrations.CreateModel(
            name='Shareholder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('comment', models.TextField(blank=True, max_length=10240)),
                ('option', models.BooleanField(default=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.contact')),
                ('share', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.share')),
                ('shareholder_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.shareholderlist')),
            ],
            options={
                'verbose_name_plural': '08. Shareholders',
                'db_table': 'shareholder',
            },
        ),
        migrations.CreateModel(
            name='HistoricalShareholderList',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('date', models.DateField()),
                ('comment', models.TextField(blank=True, max_length=10240)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('company', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.company')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical shareholder list',
                'verbose_name_plural': 'historical 07. Shareholder List',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalShareholder',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('amount', models.IntegerField()),
                ('comment', models.TextField(blank=True, max_length=10240)),
                ('option', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('share', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.share')),
                ('shareholder_list', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.shareholderlist')),
            ],
            options={
                'verbose_name': 'historical shareholder',
                'verbose_name_plural': 'historical 08. Shareholders',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
